name: Python package builder
run-name: ${{ github.actor }} is pushed some changes and now building spadmin 🚀
#on: [push]

on:
  push:
    branches:
      - main

jobs:
  build:
    if: "contains(github.event.head_commit.message, '[ubuntu]')"
    runs-on: ubuntu-20.04 #ubuntu-22.04, ubuntu-20.04,
    env:
      OS: ubuntu-20.04
    strategy:
      matrix:
#        python-version: ["3.7", "3.8", "3.9", "3.10"]
        python-version: ["3.9"]

    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d_%H%m%S')"
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️  The workflow is now ready to build your code on the runner."
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: '**/spadmin.py'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest termcolor pexpect readchar pexpect termcolor readchar gnureadline pyinstaller
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - run: echo "🖥️  The workflow is now setting up the build environment on the runner."
      - name: PyInstaller Linux
        run: pyinstaller --workpath tmp --distpath build/ --paths src --onefile --name spadmin_${{env.OS}}_${{ steps.date.outputs.date }} src/spadmin.py
      - uses: ncipollo/release-action@v1
        with:
          artifacts: build/spadmin_${{env.OS}}_${{ steps.date.outputs.date }}
          omitBody:     true
          allowUpdates: true
          tag: "RLS"

      # - uses: actions/upload-artifact@v3
      #   with:
      #     name: ${{env.OS}} build
      #     path: build/spadmin_${{env.OS}}_${{ steps.date.outputs.date }}
      # - name: Commit changes
      #   uses: EndBug/add-and-commit@v9
      #   with:
      #     author_name: Github Auto Builder
      #     author_email: marcell.szabo@gmail.com
      #     message: ${{env.OS}} build - ${{ steps.date.outputs.date }}
      #     add: 'build/spadmin_${{env.OS}}_${{ steps.date.outputs.date }}'
        
  build-mac:
    if: "contains(github.event.head_commit.message, '[mac]')"
    runs-on: macos-12 #macos-12, macos-11,
    env:
      OS: macos-12
    strategy:
      matrix:
#        python-version: ["3.7", "3.8", "3.9", "3.10"]
        python-version: ["3.9"]

    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d_%H%m%S')"
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️  The workflow is now ready to build your code on the runner."
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: '**/spadmin.py'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest termcolor pexpect readchar pexpect termcolor readchar gnureadline pyinstaller
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - run: echo "🖥️  The workflow is now setting up the build environment on the runner."
      - name: PyInstaller Linux
        run: pyinstaller --workpath tmp --distpath build/ --paths src/ --onefile --name spadmin_${{env.OS}}_${{ steps.date.outputs.date }} src/spadmin.py
 
      - uses: ncipollo/release-action@v1
        with:
          artifacts: build/spadmin_${{env.OS}}_${{ steps.date.outputs.date }}
          omitBody:     true
          allowUpdates: true
          tag: "RLS"
        
      # - uses: actions/upload-artifact@v3
      #  with:
      #    name: ${{env.OS}} build
      #    path: build/spadmin_${{env.OS}}_${{ steps.date.outputs.date }}
      # - name: Commit changes
      #  uses: EndBug/add-and-commit@v9
      #  with:
      #    author_name: Github Auto Builder
      #    author_email: marcell.szabo@gmail.com
      #    message: ${{env.OS}} build - ${{ steps.date.outputs.date }}
      #    add: 'build/spadmin_${{env.OS}}_${{ steps.date.outputs.date }}'
      
      
  build:
    if: "contains(github.event.head_commit.message, '[centos]')"
    runs-on: self-hosted
    env:
      OS: CentOS Linux release 7.9
    strategy:
      matrix:
#        python-version: ["3.7", "3.8", "3.9", "3.10"]
        python-version: ["3.9"]

    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d_%H%m%S')"
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️  The workflow is now ready to build your code on the runner."
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: '**/spadmin.py'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest termcolor pexpect readchar pexpect termcolor readchar gnureadline pyinstaller
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - run: echo "🖥️  The workflow is now setting up the build environment on the runner."
      - name: PyInstaller Linux
        run: pyinstaller --workpath tmp --distpath build/ --paths src --onefile --name spadmin_${{env.OS}}_${{ steps.date.outputs.date }} src/spadmin.py
      - uses: ncipollo/release-action@v1
        with:
          artifacts: build/spadmin_${{env.OS}}_${{ steps.date.outputs.date }}
          omitBody:     true
          allowUpdates: true
          tag: "RLS"
      
      
